バージョン０．２の目標
・UEFIブートから、OSのへの動作の移譲
　・Kernelへの動作の切り替え方を検討する。
・カーネルが動作していることの証拠の提示
　・カーネル側で文字を表示させる。
　　・とりあえずこちらでもHello, Worldを表示させるか？

目標実現に必要な要素
・ブートシーケンスを整理する。
・Kernelの実行方法を模索する。
・UEFIアプリケーション内でELF形式ファイルを解釈する。

カーネルはどうやって読み込むか？
・単純にEFI System Partitionに混ぜ込む？
・もう一つパーティションを作って、そちらに打ち込む？
　→　あまり意味はなさそう

進捗
8/22
・ファイルの作成・入出力ができるようになった。
　・GetVolume(EFI_HANDLE)を作成し、ルートディレクトリの解釈ができる。
　　・別のパーティションは解釈できるのか？
・メモリマップの解釈ができるようになった。
　・みかん本に書いてあるそのままのアプリケーションを実装しただけ。
8/23
・ルートディレクトリの取得の方法を変えた。
　・参考にしているサイトではEFI_SYMPLE_FILE_SYSTEM_PROTOCOLを利用しており、確かにそちらのほうが単純でわかりやすいので、そちらを利用する。
・ファイルの内容を解釈できることを確認した。
　・何故かPrint()でファイル内容（特に文字列）を打ち出せないという不思議な現象に出くわした。
　　・きちんとバッファをNULLで初期化し、NULL終端を区切りにforで一文字ずつ取り出せば表示できることがわかったので、今の所良しとする。
　・一応、ファイル内容は正しく読み出せるので、大した問題はないかと思われる。
　・バッファはCHAR8で取得しないと、バイトごとに読み出すのがかなり面倒なので、バッファはほとんどどんなときでもCHAR8で用意する。
・テスト用に、ダミーのkernel.elfをloader/内に用意し、make boot時にdisk.imgに含めるようにしている。
　・後々、テストが終わり次第、きちんとkernel/内で生成されたkernel.elfを含めるようにする。
8/24
・カーネルのブートに成功した。
　・今のところ、ファイルのベースアドレスがブートローダにベタうちのハードコーディング状態なので、なんとか改善をしたいところ。
　・ldにはファイルのベースアドレスを変える機能がないので、リンカスクリプトを自分で用意する必要がある。
　　→　現状は、gcc --verboseで取得したスクリプトを改造し、SECTIONの開始アドレスをいじることで対応しているが、この際自作するのも良いかもしれない。
・kernel.elfを取得したあと、ヘッダが読めない状況に遭遇し、エントリポイントが読めない状況に。
　→　バッファサイズを指定するときに、間違えてバッファのベースアドレスのポインタのサイズを取得していたのが原因。ファイルサイズに改めたら、読めるようになった。
・ldでエントリポイントを指定したら、スタートアップルーチンが必要なくなった。
　→　なんらかのメモリ空間の初期化は必要だと思うので、今後考える。

